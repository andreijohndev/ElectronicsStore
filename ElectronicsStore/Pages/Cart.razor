@page "/cart"
@using Microsoft.EntityFrameworkCore;
@inject StoreContext Context

<MudPaper Class="pa-16 ma-2" Elevation="0">
    <MudToolBar DisableGutters="true">
        <MudText Typo="Typo.h4">Shopping Cart</MudText>
        <MudSpacer />
        <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.RemoveShoppingCart"
                   Disabled=@(ShopSession?.CartItems?.Any() is false) Size="Size.Large"
                   Color="Color.Secondary" OnClick="@EmptyCart">
            Empty Cart
        </MudButton>
    </MudToolBar>
    <MudGrid>
        <MudItem xs="12" md="8">
            <MudStack Spacing="8">
                @if (ShopSession?.CartItems?.Count > 0)
                {
                    @foreach (var item in ShopSession.CartItems!)
                    {
                        <MudDivider />
                        <ShoppingCartItem CartItem="@item" OnRemoved="@OnRemove" />
                    }
                    <MudDivider />
                }
            </MudStack>
        </MudItem>
        <MudItem xs="12" md="4">
            @*<ShoppingCartSummary Items=_cartItems />*@
        </MudItem>
    </MudGrid>
</MudPaper>

@code {
    [CascadingParameter]
    private ShopSession? ShopSession { get; set; }

    [CascadingParameter]
    protected ShoppingCart? ShoppingCart { get; set; }

    private void OnRemove(CartItem cartItem)
    {
        Context.Remove(cartItem);
        Context.SaveChanges();
        ShoppingCart?.Reload();
        StateHasChanged();
    }

    private void EmptyCart()
    {
        ShopSession.CartItems.Clear();
        Context.SaveChanges();
        ShoppingCart?.Reload();
    }
}
